swagger: "2.0"
info:
  description: "Ready to deploy REST API based in vert.x framework with lots of plumbing code and documentation to quickly develope an API without any waste of time."
  version: "0.0.1"
  title: "ssv-api (Starter Single Verticle API)"
#  termsOfService: "http://localost:8080/terms/"
#  contact:
#    email: "ssv-api@gmail.com"
#  license:
#    name: "Apache 2.0"
#    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8080"
#host: "destinatarios-test.anf.es"
basePath: "/"
tags:
- name: "Admin"
  description: "Admin operations"
- name: "Test"
  description: "Endpoints to show vertx functionalities"
schemes:
- "https"
- "http"
securityDefinitions:
  basicAuth:
    type: basic
security:
  - basicAuth: []
paths:
  /admin/version:
    get:
      tags:
      - "Admin"
      summary: "API version"
      description: "Returns the deployed API version"
      operationId: "GET/admin/version"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successfull operation"
          schema:
            $ref: "#/definitions/Version"
        401:
          $ref: '#/responses/UnauthorizedError'
        500:
          $ref: '#/responses/InternalServerError'
  /admin/logs:
    get:
      tags:
      - "Admin"
      summary: "Returns a file logs"
      description: "Searches in logs directoy and returns the logs file that matches with the specified day."
      operationId: "GET/admin/logs"
      produces:
      - "text/plain"
      parameters:
      - name: "backward_days"
        in: "query"
        description: "Sustract this number to actual date and you will obtain the date of the logs file to return."
        required: true
        type: "integer"
      responses:
        200:
          description: "Successfull operation"
        400:
          description: "The requiered logs file does not exists."
        401:
          $ref: '#/responses/UnauthorizedError'
        500:
          $ref: '#/responses/InternalServerError'
    delete:
      tags:
      - "Admin"
      summary: "Cleans the logs directory"
      description: "Cleans the logs directory but do not remove the logs file from today."
      operationId: "DEL/admin/logs"
      produces:
      - "text/plain"
      responses:
        200:
          description: "Successfull operation"
        401:
          $ref: '#/responses/UnauthorizedError'
        500:
          $ref: '#/responses/InternalServerError'
  /test/blocking:
    get:
      tags:
      - "Test"
      summary: "Execute any blocking operation"
      description: "The event loop is free to receive other calls but when finish the execution of this code a response is returned to the routing context. This is recomended to handle short blocking operations."
      operationId: "GET/test/blocking"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successfull operation"
        401:
          $ref: '#/responses/UnauthorizedError'
        500:
          $ref: '#/responses/InternalServerError'
  /test/blocking-async:
    get:
      tags:
      - "Test"
      summary: "Execute any long blocking operation"
      description: "A response is returned to the routing context before the execution of blocking code. This is recomended to handle long blocking operations."
      operationId: "GET/test/blocking-async"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successfull operation"
        401:
          $ref: '#/responses/UnauthorizedError'
        500:
          $ref: '#/responses/InternalServerError'
  /test/nonblocking:
    get:
      tags:
      - "Test"
      summary: "Execute short non blocking operations"
      description: "This is recomended to handle very short operations that do not blocks the event loop."
      operationId: "GET/test/nonblocking"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successfull operation"
        401:
          $ref: '#/responses/UnauthorizedError'
        500:
          $ref: '#/responses/InternalServerError'
  /test/with-query-params:
    post:
      tags:
      - "Test"
      summary: "Handle query parameters"
      description: "This is intended to demonstrate how to obtain query parameters from POST request."
      operationId: "GET/test/with-query-params"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successfull operation"
        401:
          $ref: '#/responses/UnauthorizedError'
        500:
          $ref: '#/responses/InternalServerError'
  /test/with-json-body-params:
    put:
      tags:
      - "Test"
      summary: "Handle body parameters"
      description: "This is intended to demonstrate how to obtain parameters from a json received in the body of POST/PUT/etc request."
      operationId: "PUT/test/with-json-body-params"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successfull operation"
        401:
          $ref: '#/responses/UnauthorizedError'
        500:
          $ref: '#/responses/InternalServerError'
  /test/with-json-multipart-files:
    post:
      tags:
      - "Test"
      summary: "Handle multipart POST request"
      description: "This is intended to demonstrate how to obtain files from a multipart POST request."
      operationId: "PUT/test/with-json-multipart-files"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successfull operation"
        401:
          $ref: '#/responses/UnauthorizedError'
        500:
          $ref: '#/responses/InternalServerError'
definitions:
  Version:
    type: "object"
    properties:
      Api Version:
        type: "string"
        description: "Versi√≥n de API Destinatarios"
    xml:
      name: "Version"
responses:
  UnauthorizedError:
    description: Authentication information is missing or invalid
    headers:
      WWW_Authenticate:
        type: string
  InternalServerError:
    description: "Internal Server Error: Error desconocido en el procesamiento de la peticion HTTP. La causa de este error puede originarse en el servidor. En el mensaje de respuesta se dan detalles."
#externalDocs:
#  description: "Find out more about Swagger"
#  url: "http://swagger.io"